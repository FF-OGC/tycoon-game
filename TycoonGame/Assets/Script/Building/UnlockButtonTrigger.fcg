import "StdLibrary.fcc" as StdLib
import "EditorGenLib.fcc" as EditorLib
import "Physics.fcc" as Physics
import "../Player/PlayerEconomy/PlayerEconomy.fcg" as PlayerEconomy
import "../Economy/BigNumberHandler.fcg" as BigNumberHandler

import "../Global/CSVReadingHandler.fcg" as CSVReadingHandler


graph UnlockButtonTrigger {
    _parentEntity entity
    _unlockCost int
    _parentConfigFile CsvID

    _modelEntity entity
    _upgradeButtonEntity entity
    _unlockButtonEntity entity
    
    triggerFlag bool = true


    event OnEntityEnter(target entity<Entity>) {
    if triggerFlag  {
        
        if _parentEntity == nil {
            _parentEntity = GetParent(GetParent(thisEntity))
            _unlockCost = _parentEntity<Building>.UnlockCost 
                
            for key, _entity in GetChildren(_parentEntity) {
                if HasTag(_entity,ETag.BuildingModel) {
                    _modelEntity = _entity

                } else if HasTag(_entity,ETag.UpgradeButton) {
                    _upgradeButtonEntity = _entity
                } else if HasTag(_entity,ETag.UnlockButton) {
                    _unlockButtonEntity = _entity
                }
            }
        }

        var _playerEnter = target<Player>
        var _playerMoney = _playerEnter<PlayerEconomy>.playerMoney



        if _playerMoney[0] >= _unlockCost {
            _playerEnter<PlayerEconomy>.subtractAmount(_unlockCost)
            _parentEntity<Building>.CurrentLevel += 1 

            DispatchEventWithPlatform(SHOW_CUSTOMUI,_playerEnter, PlatformType.Local, List<object>{"UpgradeSuccessFully"})

            DispatchEvent(PLAY_SFX,_playerEnter,List<object>{"kepngan"})

            //show object model 
            SetActive(_modelEntity, true)
            var _valueDisplayText = GetChildByName(_modelEntity,"DisplayValue")
            DispatchEvent(DISPLAY_TEXT_INIT, _valueDisplayText, List<object>{})


            if _parentEntity<Building>.Type != BuildingTypeEnum.Decoration {
                SetActive(_upgradeButtonEntity, true)
                
                var _upgradeButtonText = GetChildByName(_upgradeButtonEntity,"DisplayTextUpgrade")
                DispatchEvent(DISPLAY_TEXT_INIT, _upgradeButtonText, List<object>{})


            }

            LogInfo("upgrade success")
            
            triggerFlag = false

            var _displayTextUnlock = GetChildByName(_unlockButtonEntity, "DisplayTextUnlock")
            _displayTextUnlock<Visibility>.IsVisible = false
            var _unlockTrigger = GetChildByName(_unlockButtonEntity, "DisplayTextUnlock")
            _unlockTrigger<Visibility>.IsVisible = false
            
        } else{
            DispatchEventWithPlatform(SHOW_CUSTOMUI,_playerEnter, PlatformType.Local, List<object>{"NotEnoughMoneyUI"})
        }
    }

    }

    event OnEntityExit(target entity<Entity>) {
        LogInfo("i'm leaving byebye")
    }
}